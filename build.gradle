plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'recruit'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    all {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // h2
//    implementation 'com.h2database:h2:2.3.230'
//    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.4'
    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.6.2'

    // Lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // springdoc-openapi-ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // Log
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // ETC
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.0.2'
    compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.0.0'

    // webclient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // AOP
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.9.1'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate:hibernate-validator:8.0.0.Final'
    implementation "com.querydsl:querydsl-core:5.0.0"
    implementation "com.querydsl:querydsl-collections"
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'
}

test {
    useJUnitPlatform()
}

// Querydsl 설정
def generated = "$buildDir/generated"

//task.withType(JavaCompile) {
//    options.getGeneratedSourceOutputDitectory().set(file(generated))
//}
sourceSets {
    main.java.srcDirs += [generated]
}

clean {
    delete file(generated)
}
